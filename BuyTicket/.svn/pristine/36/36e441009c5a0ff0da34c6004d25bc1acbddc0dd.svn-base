package com.buyticket.core;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Date;

import org.apache.commons.io.IOUtils;

import net.sf.json.JSONObject;


public class ChaoJiYing {
	
	/**
	 * 字符串MD5加密
	 * @param s 原始字符串
	 * @return  加密后字符串
	 */
	public final static String MD5(String s) {
		char hexDigits[] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
				'A', 'B', 'C', 'D', 'E', 'F' };
		try {
			byte[] btInput = s.getBytes();
			MessageDigest mdInst = MessageDigest.getInstance("MD5");
			mdInst.update(btInput);
			byte[] md = mdInst.digest();
			int j = md.length;
			char str[] = new char[j * 2];
			int k = 0;
			for (int i = 0; i < j; i++) {
				byte byte0 = md[i];
				str[k++] = hexDigits[byte0 >>> 4 & 0xf];
				str[k++] = hexDigits[byte0 & 0xf];
			}
			return new String(str);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	/**
	 * 通用POST方法
	 * @param url 		请求URL
	 * @param param 	请求参数，如：username=test&password=1
	 * @return			response
	 * @throws IOException
	 */
	public static String httpRequestData(String url, String param)
			throws IOException {
		URL u;
		HttpURLConnection con = null;
		OutputStreamWriter osw;
		StringBuffer buffer = new StringBuffer();

		u = new URL(url);
		con = (HttpURLConnection) u.openConnection();
		con.setRequestMethod("POST");
		con.setDoOutput(true);
		con.setDoInput(true);
		con.setRequestProperty("Content-Type",
				"application/x-www-form-urlencoded");

		osw = new OutputStreamWriter(con.getOutputStream(), "UTF-8");
		osw.write(param);
		osw.flush();
		osw.close();

		BufferedReader br = new BufferedReader(new InputStreamReader(con
				.getInputStream(), "UTF-8"));
		String temp;
		while ((temp = br.readLine()) != null) {
			buffer.append(temp);
			buffer.append("\n");
		}

		return buffer.toString();
	}

	/**
	 * 查询题分
	 * @param username	用户名
	 * @param password	密码
	 * @return			response
	 * @throws IOException
	 */
	public static String GetScore(String username, String password) {
		String param = String.format("user=%s&pass=%s", username, password);
		String result;
		try {
			result = ChaoJiYing.httpRequestData(
					"http://code.chaojiying.net/Upload/GetScore.php", param);
		} catch (IOException e) {
			result = "未知问题";
		}
		return result;
	}
	
	/**
	 * 注册账号
	 * @param username	用户名
	 * @param password	密码
	 * @return			response
	 * @throws IOException
	 */
	public static String UserReg(String username, String password) {
		String param = String.format("user=%s&pass=%s", username, password);
		String result;
		try {
			result = ChaoJiYing.httpRequestData(
					"http://code.chaojiying.net/Upload/UserReg.php", param);
		} catch (IOException e) {
			result = "未知问题";
		}
		return result;
	}

	/**
	 * 账号充值
	 * @param username	用户名
	 * @param card		卡号
	 * @return			response
	 * @throws IOException
	 */
	public static String UserPay(String username, String card) {

		String param = String.format("user=%s&card=%s", username, card);
		String result;
		try {
			result = ChaoJiYing.httpRequestData(
					"http://code.chaojiying.net/Upload/UserPay.php", param);
		} catch (IOException e) {
			result = "未知问题";
		}
		return result;
	}
	
	/**
	 * 报错返分
	 * @param username	用户名
	 * @param password	用户密码
	 * @param softId	软件ID
	 * @param id		图片ID
	 * @return			response
	 * @throws IOException
	 */
	public static String ReportError(String username, String password, String softid, String id) {
		
		String param = String
		.format(
				"user=%s&pass=%s&softid=%s&id=%s",
				username, password, softid, id);
		String result;
		try {
			result = ChaoJiYing.httpRequestData(
					"http://code.chaojiying.net/Upload/ReportError.php", param);
		} catch (IOException e) {
			result = "未知问题";
		}
		
		return result;
	}


	/**
	 * 核心上传函数
	 * @param url 			请求URL
	 * @param param			请求参数，如：username=test&password=1
	 * @param data			图片二进制流
	 * @return				response
	 * @throws IOException
	 */
	public static String httpPostImage(String url, String param,
			byte[] data) throws IOException {
		long time = (new Date()).getTime();
		URL u = null;
		HttpURLConnection con = null;
		String boundary = "----------" + MD5(String.valueOf(time));
		String boundarybytesString = "\r\n--" + boundary + "\r\n";
		OutputStream out = null;
		
		u = new URL(url);
		
		con = (HttpURLConnection) u.openConnection();
		con.setRequestMethod("POST");
		//con.setReadTimeout(60000);   
		con.setConnectTimeout(60000);
		con.setDoOutput(true);
		con.setDoInput(true);
		con.setUseCaches(true);
		con.setRequestProperty("Content-Type",
				"multipart/form-data; boundary=" + boundary);
		
		out = con.getOutputStream();
			
		for (String paramValue : param.split("[&]")) {
			out.write(boundarybytesString.getBytes("UTF-8"));
			String paramString = "Content-Disposition: form-data; name=\""
					+ paramValue.split("[=]")[0] + "\"\r\n\r\n" + paramValue.split("[=]")[1];
			out.write(paramString.getBytes("UTF-8"));
		}
		out.write(boundarybytesString.getBytes("UTF-8"));

		String paramString = "Content-Disposition: form-data; name=\"userfile\"; filename=\""
				+ "chaojiying_java.gif" + "\"\r\nContent-Type: application/octet-stream\r\n\r\n";
		out.write(paramString.getBytes("UTF-8"));
		
		out.write(data);
		
		String tailer = "\r\n--" + boundary + "--\r\n";
		out.write(tailer.getBytes("UTF-8"));

		out.flush();
		out.close();

		StringBuffer buffer = new StringBuffer();
		BufferedReader br = new BufferedReader(new InputStreamReader(con
					.getInputStream(), "UTF-8"));
		String temp;
		while ((temp = br.readLine()) != null) {
			buffer.append(temp);
			buffer.append("\n");
		}

		return buffer.toString();
	}	
	
	/**
	 * 识别图片_按图片文件路径
	 * @param username		用户名
	 * @param password		密码
	 * @param softid		软件ID
	 * @param codetype		图片类型

	 * @param len_min		最小位数
	 * @param time_add		附加时间
	 * @param str_debug		开发者自定义信息
	 * @param filePath		图片文件路径
	 * @return
	 * @throws IOException
	 */
	public static String PostPic(String username, String password,
			String softid, String codetype, String len_min, String time_add, String str_debug,
			String filePath) {
		String result = "";
		String param = String
		.format(
				"user=%s&pass=%s&softid=%s&codetype=%s&len_min=%s&time_add=%s&str_debug=%s",
				username, password, softid, codetype, len_min, time_add, str_debug);
		try {
			File f = new File(filePath);
			if (null != f) {
				int size = (int) f.length();
				byte[] data = new byte[size];
				FileInputStream fis = new FileInputStream(f);
				fis.read(data, 0, size);
				if(null != fis) fis.close();
				
				if (data.length > 0)	result = ChaoJiYing.httpPostImage("http://upload.chaojiying.net/Upload/Processing.php", param, data);
			}
		} catch(Exception e) {
			result = "未知问题";
		}
		
		
		return result;
	}

	/**
	 * 识别图片_按图片二进制流
	 * @param username		用户名
	 * @param password		密码
	 * @param softid		软件ID
	 * @param codetype		图片类型

	 * @param len_min		最小位数
	 * @param time_add		附加时间
	 * @param str_debug		开发者自定义信息
	 * @param byteArr		图片二进制数据流
	 * @return
	 * @throws IOException
	 */
	public static String PostPic(String username, String password,
			String softid, String codetype, String len_min, String time_add, String str_debug,
			byte[] byteArr) {
		String result = "";
		String param = String
		.format(
				"user=%s&pass=%s&softid=%s&codetype=%s&len_min=%s&time_add=%s&str_debug=%s",
				username, password, softid, codetype, len_min, time_add, str_debug);
		try {
			result = ChaoJiYing.httpPostImage("http://upload.chaojiying.net/Upload/Processing.php", param, byteArr);
		} catch(Exception e) {
			result = "未知问题";
		}
		
		
		return result;
	}
	
	public static String get12306RandCodeAndPicId(String userName,String pwd,byte[] oldimgdata){
		taikuaiSleep(oldimgdata);
		//106,98
		String result=ChaoJiYing.PostPic(userName,pwd, "891095", "9004", null, null, "str_debug",oldimgdata);
		JSONObject obj=JSONObject.fromObject(result);
		//{"err_no":-3002,"err_str":"\u7cfb\u7edf\u8d85\u65f6","pic_id":"977792213804","pic_str":"4798","md5":"","str_debug":"str_debug"}
		String picId=obj.getString("pic_id");
		return picId+"|"+obj.getString("pic_str").replace("|", ",");
	}
	public static String[] get12306RandCodeAndPicIdArr(String userName,String pwd,byte[] oldimgdata){
		taikuaiSleep(oldimgdata);
		//106,98
		String result=ChaoJiYing.PostPic(userName,pwd, "891095", "9004", null, null, "str_debug",oldimgdata);
		JSONObject obj=JSONObject.fromObject(result);
		//{"err_no":-3002,"err_str":"\u7cfb\u7edf\u8d85\u65f6","pic_id":"977792213804","pic_str":"4798","md5":"","str_debug":"str_debug"}
		String picId=obj.getString("pic_id");
		return new String[]{picId,obj.getString("pic_str").replace("|", ",")};
	}
	public static String get12306RandCodeAndPicIdTest(String userName,String pwd,byte[] oldimgdata){
		
		return "541304957204|259,156,256,80";
	}
	
	
	
	public static String get12306RandCodeAndPicId(byte[] oldimgdata){
		return get12306RandCodeAndPicId(Cfg.get("chaojiyingUserName"),Cfg.get("chaojiyingPwd"),oldimgdata);
	}
	public static String ReportError(String picId) {
		return ReportError(Cfg.get("chaojiyingUserName"), Cfg.get("chaojiyingPwd"), "891095", picId);		
	}
	public static final String taikuai_12306_pic="b9062b25a496f47df9648c220c9eff55";
	public static void taikuaiSleep(byte[] data){
		MessageDigest md;
		try {
			md = MessageDigest.getInstance("MD5");
			  // 计算md5函数
	        md.update(data);
	        // digest()最后确定返回md5 hash值，返回值为8为字符串。因为md5 hash值是16位的hex值，实际上就是8位的字符
	        // BigInteger函数则将8位的字符串转换成16位hex值，用字符串来表示；得到字符串形式的hash值
	        String md5= new BigInteger(1, md.digest()).toString(16);
	        if(taikuai_12306_pic.equals(md5)){
	        	try {
					Thread.sleep(5000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
	        }
		} catch (Exception e1) {
			e1.printStackTrace();
		}
	}
	public static void main(String[] args) throws Exception {		
		
		byte[] data=IOUtils.toByteArray(ChaoJiYing.class.getResourceAsStream("/resource/img/1.png"));
		
		//taikuai.png  1647782503803|152,107,224,102,104,25,57,90
		//			   1647786318503|您的刷新
		//			   1647792065503|185,142
		
		//taikuai.png MD5 b9062b25a496f47df9648c220c9eff55
		//1.png 		  ea41d9acc627832a2900cc5e35f88e7b
		MessageDigest md = MessageDigest.getInstance("MD5");
        // 计算md5函数
        md.update(data);
        // digest()最后确定返回md5 hash值，返回值为8为字符串。因为md5 hash值是16位的hex值，实际上就是8位的字符
        // BigInteger函数则将8位的字符串转换成16位hex值，用字符串来表示；得到字符串形式的hash值
        String md5= new BigInteger(1, md.digest()).toString(16);
        System.out.println(md5);
        
		/*String result=get12306RandCodeAndPicId(data);
		System.out.println(result);*/
		
		//{"err_no":0,"err_str":"OK"}
		//{"err_no":-1024,"err_str":"账号不能重复注册"}
		/*String result=UserReg("username1120", "password1120");
		JSONObject obj=JSONObject.fromObject(result);
		System.out.println(obj.toString());
		*/
		
		//System.out.println(GetScore("username1120", "password1120"));
		
		/*String r=new String(GetScore(Cfg.get("chaojiyingUserName"), Cfg.get("chaojiyingPwd")));
		System.out.println(r);*/
		
	}
}
